interface - it is a reference type , similar to a class ,can contain only constants and abstract methods .
            interface A ---extends---> interface B    , interface A ---implements ---- class A
            
            flexiblity , readable code , moduler code / loose coupling 
            
            
       uses of interface - 
       1) Achieving abstraction (100%)
       2)Multiple inheritance -
       3)Loose coupling  
       
       
       types of interface - 
       1- regular interface 
       2- Default interface (from java 8 -> default methods )
       3- Static interface ( from java 8 -> static methods)
       4- functional interface ( from java 8 )
       
       interface A {
       int x = 100; ------compiler add---> public static final int x 
       void m1();-----------compiler ----> public and abstract 
       void m2();
       }
       ================================
       Functional interface - SAM (single abstract method )- > Functional interfaces(lambda expression , method ref , streams )
       1- SAM 
       2- static and default ( java 8) , private method(java 9) 
       3- @FunctionalInterface 
       
       COMMON FUNCTIONAL INTERFACE IN JAVA - 
       1- Runnable 
       2- callable 
       3- Predicate<T>
       4- function<T,R>
       5- Consumer<T>
       6-Supplier<T>